apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-kapt'

apply plugin: 'kotlin-allopen'

apply plugin: 'kotlin-android-extensions'

allOpen {
    // allows mocking for classes without directly opening them for release builds.
    annotation 'com.ahmedabdelmeged.swissborg.btcusd.testing.OpenClass'
}

android {
    compileSdkVersion 28

    defaultConfig {
        applicationId "com.ahmedabdelmeged.swissborg.btcusd"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    //Jetback
    implementation "androidx.appcompat:appcompat:${versions.appcompat}"
    implementation "androidx.constraintlayout:constraintlayout:${versions.constraintlayout}"
    implementation "androidx.lifecycle:lifecycle-extensions:${versions.lifecycle}"
    implementation "com.google.android.material:material:${versions.material}"

    //Networking
    implementation "com.squareup.okhttp3:okhttp:${versions.okhttp}"
    implementation "com.squareup.okhttp3:logging-interceptor:${versions.okhttp}"

    //Scarlet for WebSockets
    implementation "com.github.tinder.scarlet:scarlet:${versions.scarlet}"
    implementation "com.github.tinder.scarlet:scarlet-websocket-okhttp:${versions.scarlet}"
    implementation "com.github.tinder.scarlet:scarlet-stream-adapter-rxjava2:${versions.scarlet}"
    implementation "com.github.tinder.scarlet:scarlet-message-adapter-gson:${versions.scarlet}"
    implementation "com.github.tinder.scarlet:scarlet-lifecycle-android:${versions.scarlet}"

    //Rx
    implementation "io.reactivex.rxjava2:rxjava:${versions.rxjava}"
    implementation "io.reactivex.rxjava2:rxandroid:${versions.rxandroid}"
    implementation "io.reactivex.rxjava2:rxkotlin:${versions.rxkotlin}"

    //Timber for logging
    implementation "com.jakewharton.timber:timber:${versions.timber}"

    //Dagger for dependency injection
    implementation "com.google.dagger:dagger:${versions.dagger}"
    kapt "com.google.dagger:dagger-compiler:${versions.dagger}"

    //Dagger for Android
    implementation "com.google.dagger:dagger-android:${versions.dagger}"
    implementation "com.google.dagger:dagger-android-support:${versions.dagger}"
    kapt "com.google.dagger:dagger-android-processor:${versions.dagger}"

    //Testing
    testImplementation "junit:junit:${versions.junit}"
    testImplementation "org.assertj:assertj-core:${versions.assertj}"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:${versions.mockitokotlin}"

    //Android Testing
    androidTestImplementation "androidx.test:runner:${versions.runner}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${versions.espresso}"
}